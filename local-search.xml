<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>流畅的python笔记</title>
    <link href="/2025/05/26/python/"/>
    <url>/2025/05/26/python/</url>
    
    <content type="html"><![CDATA[<h1 id="流畅的python笔记"><a href="#流畅的python笔记" class="headerlink" title="流畅的python笔记"></a>流畅的python笔记</h1><h2 id="python的数据模型"><a href="#python的数据模型" class="headerlink" title="python的数据模型"></a>python的数据模型</h2><p><code>__init__</code>是一种魔术方法，可以被读作<code>dunder init</code>魔术方法 dunder init</p>]]></content>
    
    
    <categories>
      
      <category>编程学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>利用大模型批量制作anki卡片</title>
    <link href="/2025/05/25/picsubtoanki/"/>
    <url>/2025/05/25/picsubtoanki/</url>
    
    <content type="html"><![CDATA[<h1 id="利用大模型批量制作anki卡片"><a href="#利用大模型批量制作anki卡片" class="headerlink" title="利用大模型批量制作anki卡片"></a>利用大模型批量制作anki卡片</h1><p>于是我开发这款<a href="https://github.com/Mayeggx/PicSubToAnki">PICSUBTOAKI</a>的软件，以下是其说明介绍</p><h2 id="零、前提情要"><a href="#零、前提情要" class="headerlink" title="零、前提情要"></a>零、前提情要</h2><p>用于处理以<code>当前字幕为文件名的截图文件</code>，将这种截图文件制作为anki卡片。<br>为了获得这样的截图文件，请使用<a href="https://github.com/mpv-player/mpv">mpv播放器</a>，并打开<code>mpv.conf</code>文件，<br>加入设置<code>screenshot-template=&quot;%&#123;sub-text&#125;&quot;</code>。这样就可以得到这款软件所需要的文件类型。</p><h2 id="一、软件简介"><a href="#一、软件简介" class="headerlink" title="一、软件简介"></a>一、软件简介</h2><p>PicSubToAnki 是一款用于将图片中的字幕&#x2F;单词信息快速转换为 Anki 记忆卡片的工具，支持日语（默认）和英语两种语言模式。通过集成 OpenAI 大模型自动解析单词信息，并结合 AnkiConnect 实现卡片自动导入，帮助语言学习者高效构建个性化词库。</p><h2 id="二、功能特性"><a href="#二、功能特性" class="headerlink" title="二、功能特性"></a>二、功能特性</h2><ul><li><strong>多语言支持</strong>：支持日语（”jp”）和英语（”en”）模式切换</li><li><strong>图片批量处理</strong>：可选择包含多张图片的文件夹，支持单张&#x2F;批量创建卡片</li><li><strong>智能解析</strong>：自动识别单词原型、发音、释义，并结合例句生成记忆笔记</li><li><strong>媒体集成</strong>：自动压缩图片并关联至 Anki 卡片，支持单词发音音频（日语使用 LanguagePod101，英语使用有道词典）</li><li><strong>便捷操作</strong>：提供全选&#x2F;取消全选、批量添加等快捷功能</li></ul><h2 id="三、环境要求"><a href="#三、环境要求" class="headerlink" title="三、环境要求"></a>三、环境要求</h2><ol><li><strong>Anki 环境</strong>：<ul><li>安装 Anki 2.1+（推荐最新版）</li><li>安装 <a href="https://ankiweb.net/shared/info/2055492159">AnkiConnect</a> 插件（需启动插件服务，默认端口 8765）</li></ul></li><li><strong>Python 环境</strong>：<ul><li>Python 3.8+</li><li>依赖库：<code>tkinter</code>, <code>Pillow</code>, <code>requests</code>, <code>openai</code>, <code>python-dotenv</code>（可通过 <code>pip install -r requirements.txt</code> 安装）</li></ul></li><li><strong>配置文件</strong>（新增）：<ul><li>在项目根目录创建 <code>config.ini</code> 文件，内容示例：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[openai]</span><br><span class="hljs-attr">api_key</span> = 你的API密钥  <span class="hljs-comment"># 如 sk-xxxx 或阿里云通义千问密钥</span><br><span class="hljs-attr">base_url</span> = https://dashscope.aliyuncs.com/compatible-mode/v1  <span class="hljs-comment"># 模型服务地址</span><br><span class="hljs-attr">model_name</span> = qwen-plus  <span class="hljs-comment"># 模型名称（根据服务调整）</span><br><br><span class="hljs-section">[anki]</span><br><span class="hljs-attr">jp_deck</span> = 日本語::ランダム::アニメ・マンガ・マスコミ  <span class="hljs-comment"># 日语卡组名称</span><br><span class="hljs-attr">en_deck</span> = English Vocabulary::A English Daily  <span class="hljs-comment"># 英语卡组名称</span><br><span class="hljs-attr">model_name</span> = 划词助手Antimoon模板  <span class="hljs-comment"># Anki 卡片模板名称</span><br><span class="hljs-attr">word_field</span> = 单词  <span class="hljs-comment"># 单词字段名</span><br><span class="hljs-attr">pronunciation_field</span> = 音标  <span class="hljs-comment"># 音标字段名</span><br><span class="hljs-attr">meaning_field</span> = 释义  <span class="hljs-comment"># 释义字段名</span><br><span class="hljs-attr">note_field</span> = 笔记  <span class="hljs-comment"># 笔记字段名</span><br><span class="hljs-attr">example_field</span> = 例句  <span class="hljs-comment"># 例句字段名</span><br><span class="hljs-attr">voice_field</span> = 发音  <span class="hljs-comment"># 发音字段名</span><br><span class="hljs-attr">max_width</span> = <span class="hljs-number">320</span> <span class="hljs-comment"># 压缩后图片的最大宽度（像素）</span><br><span class="hljs-attr">max_height</span> = <span class="hljs-number">240</span> <span class="hljs-comment"># 压缩后图片的最大高度（像素）</span><br><span class="hljs-attr">image_quality</span> = <span class="hljs-number">60</span> <span class="hljs-comment"># 压缩后图片的质量（0-100）</span><br><br></code></pre></td></tr></table></figure></li><li>需要有效的 OpenAI API 密钥（或兼容的大模型服务，如示例中的阿里云通义千问）</li></ul></li></ol><h2 id="四、界面说明"><a href="#四、界面说明" class="headerlink" title="四、界面说明"></a>四、界面说明</h2><p>（注：实际界面以运行时为准）</p><table><thead><tr><th>区域</th><th>功能说明</th></tr></thead><tbody><tr><td>顶部工具栏</td><td>包含「选择文件夹」（选择图片目录）、「批量添加」（批量创建选中卡片）、「全选」&#x2F;「取消全选」（快速勾选&#x2F;取消图片）、「切换模式」（日语&#x2F;英语模式切换）按钮</td></tr><tr><td>内容区域</td><td>显示图片缩略图、文件名、单词输入框及创建卡片按钮（首列新增确认框用于批量选择），支持滚动查看多文件</td></tr><tr><td>模式标签</td><td>显示当前语言模式（日语&#x2F;英语）</td></tr></tbody></table><h2 id="五、使用流程"><a href="#五、使用流程" class="headerlink" title="五、使用流程"></a>五、使用流程</h2><h3 id="步骤-0：安装依赖"><a href="#步骤-0：安装依赖" class="headerlink" title="步骤 0：安装依赖"></a>步骤 0：安装依赖</h3><p>在项目根目录（与 <code>requirements.txt</code> 同级）中，通过命令行执行以下命令安装所需依赖。也可以使用<code>install.cmd</code>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt<br></code></pre></td></tr></table></figure><h3 id="步骤-1：启动程序"><a href="#步骤-1：启动程序" class="headerlink" title="步骤 1：启动程序"></a>步骤 1：启动程序</h3><p>双击项目根目录下的 <code>start.cmd</code> 文件，即可启动工具。该脚本会自动执行 <code>python main.py</code> 完成程序初始化。</p><h3 id="步骤-2：配置参数"><a href="#步骤-2：配置参数" class="headerlink" title="步骤 2：配置参数"></a>步骤 2：配置参数</h3><p>在项目根目录的 <code>config.ini</code> 文件中填写以下内容（无需修改代码）：</p><ul><li><code>[openai]</code> 部分：填写大模型 API 密钥、服务地址和模型名称</li><li><code>[anki]</code> 部分：配置 Anki 卡组名称、卡片模板及各字段对应关系</li></ul><h3 id="步骤-3：处理图片文件"><a href="#步骤-3：处理图片文件" class="headerlink" title="步骤 3：处理图片文件"></a>步骤 3：处理图片文件</h3><ol><li>点击「选择文件夹」按钮，选择包含目标图片的文件夹（支持 .png, .jpg, .jpeg, .gif, .bmp 格式）</li><li>内容区域将显示所有图片的缩略图、文件名、单词输入框及首列确认框（用于批量选择）</li><li>在「单词」输入框中填写需要解析的目标词汇（需存在于图片内容中）</li></ol><h3 id="步骤-4：创建-Anki-卡片"><a href="#步骤-4：创建-Anki-卡片" class="headerlink" title="步骤 4：创建 Anki 卡片"></a>步骤 4：创建 Anki 卡片</h3><ul><li><strong>导入模板</strong>：如果你没有合适的模板，可以选择目录下的<code>/resources/Default.apkg</code>导入。这个模板在正面会将所有的加粗字体显示为省略号。</li><li><strong>单张创建</strong>：点击对应图片的「创建卡片」按钮，系统将自动：<ol><li>调用大模型解析单词信息（原型、发音、释义等）</li><li>压缩图片并上传至 Anki 媒体库</li><li>生成包含图片、发音、例句的 Anki 卡片</li></ol></li><li><strong>批量创建</strong>：<ol><li>通过「全选」按钮勾选所有图片，或手动勾选需要处理的图片（首列确认框）</li><li>点击「批量添加」按钮，系统将批量执行单张创建流程</li></ol></li></ul><h3 id="步骤-5：切换语言模式"><a href="#步骤-5：切换语言模式" class="headerlink" title="步骤 5：切换语言模式"></a>步骤 5：切换语言模式</h3><p>点击「切换模式」按钮可在日语&#x2F;英语模式间切换，模式标签会同步更新状态。切换后：</p><ul><li>日语模式：使用日语词典解析规则，卡片存入 <code>config.ini</code> 中配置的 <code>jp_deck</code> 牌组</li><li>英语模式：使用英语词典解析规则，卡片存入 <code>config.ini</code> 中配置的 <code>en_deck</code> 牌组</li></ul><h2 id="六、注意事项"><a href="#六、注意事项" class="headerlink" title="六、注意事项"></a>六、注意事项</h2><ol><li><strong>API 调用限制</strong>：频繁调用可能触发 OpenAI 速率限制，建议合理控制批量处理数量</li><li><strong>图片压缩</strong>：图片将被压缩为最大 320x240 像素的 JPG 格式（质量 60），不影响 Anki 显示</li><li><strong>输入验证</strong>：单词输入框不能为空，否则会提示错误</li><li><strong>服务连通性</strong>：若 AnkiConnect 未启动或端口被占用，创建卡片时会提示连接错误</li></ol><h2 id="七、常见问题"><a href="#七、常见问题" class="headerlink" title="七、常见问题"></a>七、常见问题</h2><ul><li><strong>Q：创建卡片后无反应？</strong><br>A：检查 AnkiConnect 服务是否运行（可通过 <code>http://localhost:8765</code> 测试连通性）；查看终端输出是否有 API 调用错误信息。</li><li><strong>Q：图片无法加载？</strong><br>A：确认图片格式支持（仅列出格式）；检查图片是否被其他程序占用；尝试重启工具。</li><li><strong>Q：发音链接无效？</strong><br>A：日语发音依赖 LanguagePod101 服务（可能因地区限制不可用）；英语发音依赖有道词典，部分生僻词可能无音频。</li></ul><h2 id="八、prompt参考"><a href="#八、prompt参考" class="headerlink" title="八、prompt参考"></a>八、prompt参考</h2><ul><li><strong>日语prompt</strong>：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 日文单词原型（如果是变形，返回原形）<br><span class="hljs-bullet">2.</span> 日文的发音<br><span class="hljs-bullet">3.</span> 单词在词典中的日文释义（不包含单词本身，必须只有日文）<br><span class="hljs-bullet">4.</span> 当前的例句，并将和单词的部分用<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span></span>&#123;key&#125;<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span></span>的形式包围<br><span class="hljs-bullet">5.</span> 用中文结合语境解释一下当前单词的意思<br></code></pre></td></tr></table></figure></li><li><strong>英文prompt</strong>：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 英文单词原型（如果是变形，返回原形）<br><span class="hljs-bullet">2.</span> 单词的音标<br><span class="hljs-bullet">3.</span> 单词在词典中的英文释义（不包含单词本身，必须只有英文）<br><span class="hljs-bullet">4.</span> 当前的例句，并将和单词的部分用<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span></span>&#123;key&#125;<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span></span>的形式包围<br><span class="hljs-bullet">5.</span> 用中文结合语境解释一下当前单词的意思<br></code></pre></td></tr></table></figure>如果有需要，请参考如上prompt自行修改</li></ul><hr><blockquote><p>文档版本：v1.3<br>更新日期：2025-05-25</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>语言学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>日语学习历程</title>
    <link href="/2024/12/03/jp/"/>
    <url>/2024/12/03/jp/</url>
    
    <content type="html"><![CDATA[<h1 id="日语学习历程"><a href="#日语学习历程" class="headerlink" title="日语学习历程"></a>日语学习历程</h1><h2 id="1-N1速通流程"><a href="#1-N1速通流程" class="headerlink" title="1 N1速通流程"></a>1 N1速通流程</h2><h3 id="🎯-1-五十音"><a href="#🎯-1-五十音" class="headerlink" title="🎯 1 五十音"></a>🎯 1 五十音</h3><p>点开B站<a href="https://www.bilibili.com/video/BV1Bp4y1D747">任意的课程</a>，能做到默写即可~当然只是这样记忆很快就会消散，我们需要立即进入下一步，开始应用五十音。  </p><ul><li>有的教程可能会有声调的教学。但声调完全没必要学，读多了自然能掌握😉。  </li><li>尤其要注意与拼音英文不同的发音部分，不要光凭直觉，这将贯穿语言学习的始终✨。比如轻辅浊音、元音的开口大小。</li></ul><h3 id="📘-2-N5-N3"><a href="#📘-2-N5-N3" class="headerlink" title="📘 2 N5-N3"></a>📘 2 N5-N3</h3><h4 id="📚-教材"><a href="#📚-教材" class="headerlink" title="📚 教材"></a>📚 教材</h4><p>新标日初级上下册，上下册共48课，每天学2课加上复习大约需要6-8个小时，历时1个月⏳。根据自身情况，每天学习1课时或者一半课时均可。  </p><ul><li>这两本书虽说是初级，但整个日语<strong>最有用</strong>的内容几乎都集合在其中了🌟。  </li><li>新标日经常受诟病的地方在于：没有开始给出动词的原型。这无伤大雅，很快学到动词变形就会明朗起来~</li></ul><h4 id="📹-课程"><a href="#📹-课程" class="headerlink" title="📹 课程"></a>📹 课程</h4><p>是存在网盘里的未明天梦子老师的日语课，虽是十几年前的视频，但内容也大差不差📺。课程一方面能拓展课本，一方面能重复关键的知识点加以记忆。尽可能在观看时默默跟读👄。  </p><h4 id="📝-复习"><a href="#📝-复习" class="headerlink" title="📝 复习"></a>📝 复习</h4><p>我会记下每节课的笔记，并制作一份挖空的版本用来复习，并在当天复习昨天和大前天的内容📅。语言学习，应该有规律的按自己节奏复习，跨越长时间维度的复习是记忆的关键~  </p><h4 id="🌟-关于正反馈"><a href="#🌟-关于正反馈" class="headerlink" title="🌟 关于正反馈"></a>🌟 关于正反馈</h4><p>开始学标日的那些唐氏单词，无疑会让人感到无趣和挫败感😫。可当你学完动词的所有变形，正反馈将在此时达到高潮🎉！动词的变形看似复杂，但相较于其可以处理的无数情况，可太短小精悍了。你可以运用其去任意分析你喜欢的日语材料，感受中文翻译之下蕴含的情感，真是让人欲罢不能啊~所以如果感觉难以坚持，请再坚持一会，学到我最喜欢的动词变形吧！  </p><h3 id="🔍-N2"><a href="#🔍-N2" class="headerlink" title="🔍 N2"></a>🔍 N2</h3><h4 id="🌐-网站"><a href="#🌐-网站" class="headerlink" title="🌐 网站"></a>🌐 网站</h4><p>标准日本语初级的语法是分散的，也是不全面的，仍然有很多情况无法被分析和理解📊。关于语法、词性的部分可以在<a href="https://www.sigure.tw/">时雨之町</a>这个网站里，系统规范的再学习一遍。里面的文章很全面和深刻，看完能对日语有进一步的理解，有一种豁然开朗的感觉✨！<br>如果想要<strong>速通</strong>日语大部分内容，直接看这个网站进行学习也是可行的🚀。前提是要积累一定的词汇和语感。  </p><h4 id="📖-教材和视频"><a href="#📖-教材和视频" class="headerlink" title="📖 教材和视频"></a>📖 教材和视频</h4><p>TRY! N2。这本书的ui很好看，文章也挺有意思，把许多语法串联在一起很自然📚。我是把它当标日来学的，一边学语法，一边遇到生词就记下来。由于它不是专门的单词书，所以输入的单词量还是偏少📖。这本书的视频教学比较少，我记得我看的是一个叫迷加老师的录播。这种录播虽然冗长，但是多听听这种老师的碎碎念，作为教材之外的扩展，对语言提升还是有帮助的~  </p><h4 id="⏱️-时间安排"><a href="#⏱️-时间安排" class="headerlink" title="⏱️ 时间安排"></a>⏱️ 时间安排</h4><p>当时我的时间安排是一天6小时+，正好用4个多月学完了N2的内容⌛，当时开始的时间安排如下所示。如果没有那么多精力，佛系地学一天2小时-，1年达到N2应该绰绰有余~  </p><h3 id="📚-N1"><a href="#📚-N1" class="headerlink" title="📚 N1"></a>📚 N1</h3><p>N1阶段就是纯纯的堆砌词汇量了📚。就算是N1的语法，某种意义上也只算是固定搭配的词汇。  </p><h4 id="📖-词汇"><a href="#📖-词汇" class="headerlink" title="📖 词汇"></a>📖 词汇</h4><p>新东方日本语能力测试N1，实际上是翻译“耳から覚える日本語試験”引进的书📕。这本词汇书量大管饱，摘了很多特别经典有用的词汇，解释精准恰当。使用方法就是自己划重点、摘抄、跟读、默写✍️。  </p><h4 id="📗-语法"><a href="#📗-语法" class="headerlink" title="📗 语法"></a>📗 语法</h4><p>新完全掌握日语能力考试N1语法📘。N1的语法书内容很少，而且都不怎么用得上，古神语了属于是😂。这本书比较一般，编排的感觉有点老式。但是b站有一个<a href="https://www.bilibili.com/video/BV1iP4y1p7d8/">很接地气的教学视频</a>，配合使用学的挺有意思~  </p><h3 id="⚙️-其他工具"><a href="#⚙️-其他工具" class="headerlink" title="⚙️ 其他工具"></a>⚙️ 其他工具</h3><ul><li><a href="https://www.mojidict.com/">Moji辞书</a>。对初学者很友好的中日词典，新潮的单词收录的很全，操作简单✨。缺点是有些不规范。  </li><li><a href="https://dict.asia/">DICT.ASIA</a>。中日词典，解释简略📖。  </li><li><a href="https://www.weblio.jp/">weblio</a>。日文词典，涵盖内容很广🌐。  </li><li><a href="https://apps.ankiweb.net/">Anki</a>。记忆卡片软件，伟大无需多言🌟！  </li><li><a href="https://zh.hinative.com/">Hinative</a>。是询问本地人语言问题的网站🤝。有些逆天表达，也许只有本地人知道是什么意思。  </li><li><a href="https://mdict.org/">Mdict</a>。本地词典库📚。  </li><li><a href="https://forum.freemdict.com/">freemdict</a>。词典分享网站📤。</li></ul><h2 id="2-面向动画的日语学习"><a href="#2-面向动画的日语学习" class="headerlink" title="2 面向动画的日语学习"></a>2 面向动画的日语学习</h2><p>N1只是日语学习的开始🚀。当啃完上面基本教材，也有了通过考试的能力，当面对纯日文的生肉时，还是会感到茫然和渺小😵。略读、口语、俗语、流行语、网络用语、方言、专有名词，都是无处不在，又在教材中缺失的东西。既然我们已经经过了系统的学习，就有了分析语句并且归类学习的能力。下文将大致叙述如何通过动画和游戏学习日语，最终达到流畅地观看生肉动画、游玩原版游戏的目的🎮。  </p><p>无论是什么材料，我基本的思路是：<u>在使用过程中，摘出不理解的文本，并查询文本中的生词，最好再把他们加入到记忆卡片，定时复习</u>📌。为了减少对使用材料过程的打断，可以在结束之后统一对摘出的文本进行生词查询。  </p><h3 id="🎬-动画"><a href="#🎬-动画" class="headerlink" title="🎬 动画"></a>🎬 动画</h3><ol><li>下载生肉动画+对应日语的字幕📥。生肉动画下载<a href="https://nyaa.si/">nyaa</a>上英文字幕组压制的mkv格式的视频即可，使用外挂字幕可以自由的切换字幕，并且提取出字幕的文本。初期如果无法直接看纯日文的字幕，可以使用中文+日文，或者日文+英文的双语字幕过渡一下；日语字幕可在<a href="https://jimaku.cc/">jimaku</a>这个网站上下载~  </li><li>配置播放器⚙️。在观看动画时，如果遇到生词，我们需要播放器把当前的字幕导出。最好再自动截一张当前的图片便于之后记忆卡片的制作📸。  <ul><li>potplayer播放器可以通过快捷键复制当前字幕和截图。为了保留当前导出到剪切板的字幕，可以使用<a href="https://ditto-cp.sourceforge.io/">ditto</a>或是<a href="https://learnjapanese.moe/texthooker.html">Texthooker</a> + <a href="https://github.com/laplus-sadness/lap-clipboard-inserter">Lap Clipboard Inserter</a>组合。texthooker是一个用来接收当前设备剪切板的空页面，接收到后会将其滞留到页面中。  </li><li>MPV播放器可以通过编写<a href="https://github.com/rofe33/mpv-copyStuff">lua脚本</a>，一键保存当前的字幕和图像，并把字幕输出到文本文件中。MPV跨平台，在安卓设备上也可以使用📱。</li></ul></li><li>划词🔍。看完一集动画，会有很多未解的生词等待处理。这里推荐两个划词软件，可以在查词的同时将其导入到Anki中~  <ul><li><a href="https://github.com/themoeway/yomitan">Yomitan</a>是一个浏览器插件，而且是日语的专门划词软件，支持导入自定义的词典📖。可搭配<a href="https://learnjapanese.moe/texthooker.html">Texthooker</a> + <a href="https://github.com/laplus-sadness/lap-clipboard-inserter">Lap Clipboard Inserter</a>使用。  </li><li><a href="https://github.com/mmjang/ankihelper">Anki划词助手</a>，仅支持安卓端，目前已停止维护。但最近还有人修改了一下，出了Anki划词助手plus。支持多语言，比上面的插件功能完善许多，可以自动生成挖空的例句✨。</li></ul></li><li>卡片完善🎨。划词生成的卡片也许有不完善的地方，比如有的地方没有挖空、单词表达太生僻需要自己上网查找。可以根据自己理解加一些图片便于记忆，也可以把相关动画的截图添加到Anki卡片上📌。如图，卡片的正面为挖空的例句+图片+解释，反面则为对应的单词~</li></ol><h3 id="🎮-游戏"><a href="#🎮-游戏" class="headerlink" title="🎮 游戏"></a>🎮 游戏</h3><ol><li>打开原版游戏🎲。许多汉化的galgame会留下一个原版的启动文件，打开它需要特定的运行环境，可以安装<a href="https://github.com/xupefei/Locale-Emulator">Locale Emulater</a>来模拟转区~  </li><li>提取游戏文本📜。大部分的Galgame的游戏文本可以通过Textractor直接提取出来。<a href="https://github.com/Artikash/Textractor">Textractor</a>可以实时复制当前的文本到剪切板，或者呼出一个置顶窗口记录提取的文字。其他操作参考动画部分。如果有太多按键需要操作，可以用 pyautogui + keyboard 的脚本加以辅助~  </li><li>划词，完善卡片🔄。</li></ol><h3 id="⚖️-难易度相关"><a href="#⚖️-难易度相关" class="headerlink" title="⚖️ 难易度相关"></a>⚖️ 难易度相关</h3><ol><li>N3: 最简单的学习材料就是偏向子供向的动画，比如lovelive、偶像大师这种样板戏🎵。发生的地点在日常校园，话题只有空泛的梦想。初学可以拿她们来试试手~  </li><li>N2-N1: 普通的的日常动画📺。  </li><li>N1+：偏难的材料，比如说异世界、日本古代背景和某个领域的动画🏰，开始可能需要积累大量词汇适应。尤其是日本古代，为了耍帅，都会换一套说法~  </li><li>N1：Galgame需要一下处理大量的文字材料，如果词汇量不够，还是相当难用的😅。但正是因为文字的密度较高，且第一人称的体验接近现实，啃玩后应会有较大的提升~  </li><li>开始接触生肉，一定会有无论如何都无法解释的地方🤷。如果能了解大致意思，其实可以不用纠结小小一点。理由有二：  <ul><li>相比较使用翻译带来的信息缺失，这点缺失算不上什么✨。  </li><li>对于牙牙学语的孩子，遇见不懂的语言是常态~，不必焦虑。长时间暴露在这种未知的环境下，语言能力自然会得到潜移默化的提升🌱。</li></ul></li></ol><h2 id="3-结语"><a href="#3-结语" class="headerlink" title="3 结语"></a>3 结语</h2><p>大二那年封校，整天躺尸在床上上网课的我，决定做些什么💪。<br>晚上从图书馆走出的我，兴奋地滑动着手机中的歌词🎵。将所学的知识一点点的串联起来，理解着眼前的句子。<br>当时听到 知らない言葉を、覚えていくたび（把未曾知晓的语言，逐渐记住之时），我感觉这就是在说我自己啊😭。<br>那段<strong>我武者羅</strong>一般学习的日子，我大概永远都不会忘记吧~🌟</p>]]></content>
    
    
    <categories>
      
      <category>语言学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2024/09/23/test/"/>
    <url>/2024/09/23/test/</url>
    
    <content type="html"><![CDATA[<h1 id="HELLO"><a href="#HELLO" class="headerlink" title="HELLO"></a>HELLO</h1><p>11111111</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>2222</p><p><img src="/img/kumiko_practice.jpg" alt="photo_test"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">void</span> <span class="hljs-title function_">jwt</span><span class="hljs-params">()</span> &#123;<br>Map&lt;String,Object&gt; claims = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>claims.put(<span class="hljs-string">&quot;username&quot;</span>,<span class="hljs-string">&quot;admin&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">jwt</span> <span class="hljs-operator">=</span> Jwts.builder()<br>.signWith(SignatureAlgorithm.HS256,<span class="hljs-string">&quot;mayeggasdfegrhtryutyrewdfgerh5tjyhgfbdsdsafwefrvsdvsdvds&quot;</span>)<br>              .setClaims(claims)<br>                .setExpiration(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(System.currentTimeMillis()+<span class="hljs-number">100000</span>))<br>                .compact();<br>        System.out.println(jwt);<br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
